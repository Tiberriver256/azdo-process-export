# Task ID: 3
# Title: Implement Authentication Logic
# Status: pending
# Dependencies: 2
# Priority: high
# Description: Support DefaultAzureCredential chain and PAT override for Azure DevOps and OData APIs, following latest best practices for credential precedence, error handling, and logging.
# Details:
Implement authentication logic in /infrastructure/auth.py. If --pat is provided, always use it for Basic Auth and do not fallback to Azure AD if PAT fails. If no PAT is provided, use DefaultAzureCredential from azure-identity==1.14.0 for Bearer token authentication. Ensure correct token scope for both Azure DevOps and OData endpoints. Centralize error handling and structured JSON logging for all credential operations and failures. Emit clear, actionable error messages and map fatal credential errors to exit code 2. Document credential precedence and troubleshooting steps in README and CLI help.

# Test Strategy:
Use Behave scenarios to test both credential paths (PAT and Azure AD), including mocked failures for each. Verify error messaging, exit codes, and structured JSON logging output. Ensure correct token scopes are used for Azure DevOps and OData endpoints. Validate documentation updates for credential precedence and troubleshooting.

# Subtasks:
## 1. Scenario 1: Write failing test for basic PAT authentication [pending]
### Dependencies: None
### Description: Create a Behave scenario testing basic PAT authentication and verify it fails initially.
### Details:


## 2. Implement 1: Make basic PAT authentication scenario pass [pending]
### Dependencies: 3.1
### Description: Implement minimal PAT authentication in /infrastructure/auth.py to make the basic PAT scenario pass.
### Details:


## 3. Refactor 1: Clean up PAT authentication implementation [pending]
### Dependencies: 3.2
### Description: Refactor PAT authentication implementation for clarity and maintainability while keeping tests green.
### Details:


## 4. Scenario 2: Write failing test for DefaultAzureCredential fallback [pending]
### Dependencies: 3.3
### Description: Create a Behave scenario testing DefaultAzureCredential fallback when no PAT is provided and verify it fails initially.
### Details:


## 5. Implement 2: Make DefaultAzureCredential scenario pass [pending]
### Dependencies: 3.4
### Description: Implement DefaultAzureCredential fallback with correct Azure DevOps token scope to make the scenario pass.
### Details:


## 6. Refactor 2: Clean up DefaultAzureCredential implementation [pending]
### Dependencies: 3.5
### Description: Refactor DefaultAzureCredential implementation for better structure while keeping tests green.
### Details:


## 7. Scenario 3: Write failing test for error handling and logging [pending]
### Dependencies: 3.6
### Description: Create a Behave scenario testing authentication error handling and structured JSON logging and verify it fails initially.
### Details:


## 8. Implement 3: Make error handling and logging scenario pass [pending]
### Dependencies: 3.7
### Description: Implement structured JSON logging and centralized error handling with clear error messages to make the scenario pass.
### Details:


## 9. Scenario 4: Write failing test for documentation and help [pending]
### Dependencies: 3.8
### Description: Create a Behave scenario testing credential precedence documentation and troubleshooting and verify it fails initially.
### Details:


## 10. Implement 4: Make documentation scenario pass and final refactor [pending]
### Dependencies: 3.9
### Description: Implement documentation updates for README and CLI help to make the scenario pass, then final refactor for production readiness.
### Details:


