# Task ID: 6
# Title: Fetch Project Metadata from Azure DevOps REST APIs
# Status: pending
# Dependencies: 5
# Priority: high
# Description: Implement logic to fetch work-item types, fields, behaviors, teams, backlogs, and team settings for a given project.
# Details:
Use azure-devops==7.1.0 or direct REST calls via httpx. Endpoints: /wit/workitemtypes, /wit/fields, /processes/{id}/behaviors, /core/teams, /work/backlogs, /work/teamsettings. Serialize results into domain objects. Place logic in /domain/metadata.py.

# Test Strategy:
Behave scenarios for each endpoint. Unit test response parsing and error handling.

# Subtasks:
## 1. Scenario 1: Write failing test for basic project metadata fetch [pending]
### Dependencies: None
### Description: Create a Behave scenario testing basic project metadata fetch and verify it fails initially.
### Details:


## 2. Implement 1: Make basic metadata fetch scenario pass [pending]
### Dependencies: 6.1
### Description: Implement minimal project metadata fetch to make the basic scenario pass.
### Details:


## 3. Refactor 1: Clean up basic metadata fetch [pending]
### Dependencies: 6.2
### Description: Refactor basic metadata fetch implementation while keeping tests green.
### Details:


## 4. Scenario 2: Write failing test for work item types fetch [pending]
### Dependencies: 6.3
### Description: Create a Behave scenario testing work item types fetch and verify it fails initially.
### Details:


## 5. Implement 2: Make work item types scenario pass [pending]
### Dependencies: 6.4
### Description: Implement work item types fetch to make the scenario pass.
### Details:


## 6. Refactor 2: Clean up work item types implementation [pending]
### Dependencies: 6.5
### Description: Refactor work item types implementation while keeping tests green.
### Details:


## 7. Scenario 3: Write failing test for remaining metadata types [pending]
### Dependencies: 6.6
### Description: Create a Behave scenario testing fields, behaviors, teams, and backlogs fetch and verify it fails initially.
### Details:


## 8. Implement 3: Make remaining metadata scenario pass [pending]
### Dependencies: 6.7
### Description: Implement fields, behaviors, teams, and backlogs fetch to make the scenario pass.
### Details:


## 9. Refactor 3: Final cleanup for production readiness [pending]
### Dependencies: 6.8
### Description: Final refactor of complete project metadata fetch for production readiness while ensuring all tests remain green.
### Details:


